From ccd7d92a76b1896e108e70f4ec1d337d557e64e4 Mon Sep 17 00:00:00 2001
From: Graham Horner <graham@hornercs.co.uk>
Date: Tue, 7 Jan 2020 20:21:22 +0000
Subject: [PATCH] Fixed missing stereo on HDMI; provision for 4.9 card names;
 tidied up audio sink names

---
 xbmc/cores/AudioEngine/Sinks/AESinkALSA.cpp | 21 +++++++++++----------
 1 file changed, 11 insertions(+), 10 deletions(-)

diff --git a/xbmc/cores/AudioEngine/Sinks/AESinkALSA.cpp b/xbmc/cores/AudioEngine/Sinks/AESinkALSA.cpp
index 84c10c4b35..14117da18c 100644
--- a/xbmc/cores/AudioEngine/Sinks/AESinkALSA.cpp
+++ b/xbmc/cores/AudioEngine/Sinks/AESinkALSA.cpp
@@ -535,7 +535,6 @@ bool CAESinkALSA::Initialize(AEAudioFormat &format, std::string &device)
         case CAEStreamInfo::STREAM_TYPE_AC3:
           aml_digital_codec = 2;
           break;
-
         case CAEStreamInfo::STREAM_TYPE_DTS_512:
         case CAEStreamInfo::STREAM_TYPE_DTS_1024:
         case CAEStreamInfo::STREAM_TYPE_DTS_2048:
@@ -548,17 +547,19 @@ bool CAESinkALSA::Initialize(AEAudioFormat &format, std::string &device)
         case CAEStreamInfo::STREAM_TYPE_DTSHD_MA:
           aml_digital_codec = 8;
           break;
-
         case CAEStreamInfo::STREAM_TYPE_EAC3:
           aml_digital_codec = 4;
           break;
         case CAEStreamInfo::STREAM_TYPE_TRUEHD:
+        case CAEStreamInfo::STREAM_TYPE_MLP:
           aml_digital_codec = 7;
           break;
+        default:
+          break;
       }
     }
-    else if (device.find("M8AUDIO") != std::string::npos)
-        device = "@:CARD=AMLM8AUDIO,DEV=0";
+    else if (device.find("AML") != std::string::npos)
+        device = "default";
 
     aml_set_audio_passthrough(m_passthrough);
     SysfsUtils::SetInt("/sys/class/audiodsp/digital_codec", aml_digital_codec);
@@ -1548,6 +1550,10 @@ void CAESinkALSA::EnumerateDevice(AEDeviceInfoList &list, const std::string &dev
       info.m_streamTypes.push_back(CAEStreamInfo::STREAM_TYPE_DTS_512);
       info.m_dataFormats.push_back(AE_FMT_RAW);
     }
+    else if (info.m_displayName.find("AML") != std::string::npos)
+    {
+      info.m_displayNameExtra = "HDMI, S/PDIF & analogue";
+    }
     else if (info.m_displayNameExtra.empty())
     {
       /* for USB audio, it gets a bit confusing as there is
@@ -1562,7 +1568,7 @@ void CAESinkALSA::EnumerateDevice(AEDeviceInfoList &list, const std::string &dev
     if (device == "@" || device == "default")
     {
       /* Make it "Default (whatever)" */
-      info.m_displayName = "Default (" + info.m_displayName + (info.m_displayNameExtra.empty() ? "" : " " + info.m_displayNameExtra + ")");
+      info.m_displayName = "Default (" + info.m_displayName + (info.m_displayNameExtra.empty() ? "" : ": " + info.m_displayNameExtra + ")");
       info.m_displayNameExtra = "";
     }
 
@@ -1659,11 +1665,6 @@ void CAESinkALSA::EnumerateDevice(AEDeviceInfoList &list, const std::string &dev
       info.m_dataFormats.push_back(i);
   }
 
-  if (info.m_displayName.find("M8AUDIO") != std::string::npos && info.m_deviceType != AE_DEVTYPE_HDMI)
-  {
-    info.m_displayNameExtra = "PCM";
-  }
-
   if (info.m_deviceType == AE_DEVTYPE_HDMI)
   {
     // we don't trust ELD information and push back our supported formats explicitly
-- 
2.17.1

