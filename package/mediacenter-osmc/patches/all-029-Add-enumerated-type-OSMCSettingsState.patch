From c6e02ffe39af20d382377663575e0015d7cb4d3a Mon Sep 17 00:00:00 2001
From: Sam Nazarko <email@samnazarko.co.uk>
Date: Sun, 23 Aug 2015 15:53:43 +0100
Subject: [PATCH] Add enumerated type OSMCSettingsState

Signed-off-by: Sam Nazarko <email@samnazarko.co.uk>
---
 xbmc/Application.cpp |  1 +
 xbmc/Application.h   | 12 ++++++++++++
 2 files changed, 13 insertions(+)

diff --git a/xbmc/Application.cpp b/xbmc/Application.cpp
index 4c8bf1d..e1f0b04 100644
--- a/xbmc/Application.cpp
+++ b/xbmc/Application.cpp
@@ -265,6 +265,7 @@ CApplication::CApplication(void)
   , m_progressTrackingItem(new CFileItem)
   , m_musicInfoScanner(new CMusicInfoScanner)
   , m_fallbackLanguageLoaded(false)
+  , m_eOSMCWalkthroughState(OSMC_WALKTHROUGH_NOTRUNNING)
 {
   m_network = NULL;
   TiXmlBase::SetCondenseWhiteSpace(false);
diff --git a/xbmc/Application.h b/xbmc/Application.h
index cd52a73..f95add6 100644
--- a/xbmc/Application.h
+++ b/xbmc/Application.h
@@ -155,6 +155,18 @@ public:
   void StopPVRManager();
   bool IsCurrentThread() const;
   void Stop(int exitCode);
+
+  // osmc signals
+
+  typedef enum
+  {
+       OSMC_WALKTHROUGH_NOTRUNNING = 0,
+       OSMC_WALKTHROUGH_ISRUNNING = 1,
+       OSMC_WALKTHROUGH_ISDONE = 2,
+  } OSMCWalkthroughState;
+  OSMCWalkthroughState m_eOSMCWalkthroughState;
+  void SetOSMCWalkthroughState(OSMCWalkthroughState state) { m_eOSMCWalkthroughState = state; }
+
   void RestartApp();
   void UnloadSkin(bool forReload = false);
   bool LoadUserWindows();
-- 
2.1.0

