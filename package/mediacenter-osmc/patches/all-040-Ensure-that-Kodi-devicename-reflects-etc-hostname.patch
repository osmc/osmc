From 124c889adbc2a1cc23917567116ab2833f339611 Mon Sep 17 00:00:00 2001
From: Sam Nazarko <email@samnazarko.co.uk>
Date: Sun, 20 Sep 2015 14:40:24 +0100
Subject: [PATCH] Ensure that Kodi's 'services.devicename' reflects
 /etc/hostname:

* Set the device name from the hostname at startup
* Ensure callback handles changes to this and updates /etc/hostname if changed in GUI

Do not worry about /etc/hosts as libnss-myhostname should handle this.

Signed-off-by: Sam Nazarko <email@samnazarko.co.uk>
---
 system/settings/settings.xml     |  2 +-
 xbmc/Application.cpp             |  1 +
 xbmc/GUIInfoManager.cpp          |  6 +++++-
 xbmc/network/NetworkServices.cpp | 17 +++++++++++++++++
 xbmc/settings/Settings.cpp       |  1 +
 5 files changed, 25 insertions(+), 2 deletions(-)

diff --git a/system/settings/settings.xml b/system/settings/settings.xml
index 8ba5ef2..5a67d15 100644
--- a/system/settings/settings.xml
+++ b/system/settings/settings.xml
@@ -2054,7 +2054,7 @@
       <group id="1">
         <setting id="services.devicename" type="string" label="1271" help="36321">
           <level>0</level>
-          <default>Kodi</default>
+	  <default>""</default>
           <control type="edit" format="string" />
         </setting>
       </group>
diff --git a/xbmc/Application.cpp b/xbmc/Application.cpp
index d37aa11..9933b18 100644
--- a/xbmc/Application.cpp
+++ b/xbmc/Application.cpp
@@ -628,6 +628,7 @@ bool CApplication::Create()
     return false;
   }
   CSettings::GetInstance().SetLoaded();
+  CSettings::GetInstance().SetString(CSettings::SETTING_SERVICES_DEVICENAME, hostname);
 
   CLog::Log(LOGINFO, "creating subdirectories");
   CLog::Log(LOGINFO, "userdata folder: %s", CURL::GetRedacted(CProfilesManager::GetInstance().GetProfileUserDataFolder()).c_str());
diff --git a/xbmc/GUIInfoManager.cpp b/xbmc/GUIInfoManager.cpp
index 458ab86..e4da7f0 100644
--- a/xbmc/GUIInfoManager.cpp
+++ b/xbmc/GUIInfoManager.cpp
@@ -2114,7 +2114,11 @@ std::string CGUIInfoManager::GetLabel(int info, int contextWindow, std::string *
     }
     break;
   case SYSTEM_FRIENDLY_NAME:
-    strLabel = CSysInfo::GetDeviceName();
+    {
+      std::string hostname("osmc");
+      g_application.getNetwork().GetHostName(hostname);
+      strLabel = hostname.c_str();
+    }
     break;
   case SYSTEM_STEREOSCOPIC_MODE:
     {
diff --git a/xbmc/network/NetworkServices.cpp b/xbmc/network/NetworkServices.cpp
index 601251b..f63e812 100644
--- a/xbmc/network/NetworkServices.cpp
+++ b/xbmc/network/NetworkServices.cpp
@@ -439,6 +439,23 @@ void CNetworkServices::OnSettingChanged(const CSetting *setting)
       CApplicationMessenger::GetInstance().PostMsg(TMSG_RESTARTAPP);
     }
   }
+
+  if (settingId == "services.devicename")
+  {
+     std::string newHostName = CSettings::GetInstance().GetString("services.devicename");
+     FILE *fp;
+     fp = fopen("/tmp/hostname", "w");
+     if (fp)
+     {
+         fprintf(fp, "%s", newHostName.c_str());
+         fclose(fp);
+     }
+     else
+         return;
+     system("/usr/bin/sudo /bin/mv /tmp/hostname /etc/hostname");
+     system("/usr/bin/sudo /bin/hostname -F /etc/hostname");
+  }
+
 }
 
 bool CNetworkServices::OnSettingUpdate(CSetting* &setting, const char *oldSettingId, const TiXmlNode *oldSettingNode)
diff --git a/xbmc/settings/Settings.cpp b/xbmc/settings/Settings.cpp
index 9aaf6ed..3f67a20 100644
--- a/xbmc/settings/Settings.cpp
+++ b/xbmc/settings/Settings.cpp
@@ -1157,6 +1157,7 @@ void CSettings::InitializeISettingCallbacks()
   settingSet.insert(CSettings::SETTING_SERVICES_ESCONTINUOUSDELAY);
   settingSet.insert(CSettings::SETTING_SMB_WINSSERVER);
   settingSet.insert(CSettings::SETTING_SMB_WORKGROUP);
+  settingSet.insert(CSettings::SETTING_SERVICES_DEVICENAME);
   m_settingsManager->RegisterCallback(&CNetworkServices::GetInstance(), settingSet);
 
   settingSet.clear();
-- 
2.1.0

