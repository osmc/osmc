From a29776acb80ff5e457b08cfc61bb3d272eb836ba Mon Sep 17 00:00:00 2001
From: Sam Nazarko <email@samnazarko.co.uk>
Date: Tue, 18 Aug 2015 01:53:19 +0100
Subject: [PATCH] Signal power event via instantiated power interface before
 calling CApplication::Stop:

* Do not tear down addons unless we are exiting

* Do not save settings via CApplication::Stop() unless we are exiting

Signed-off-by: Sam Nazarko <email@samnazarko.co.uk>
---
 xbmc/Application.cpp | 34 +++++++++++++++++++++-------------
 1 file changed, 21 insertions(+), 13 deletions(-)

diff --git a/xbmc/Application.cpp b/xbmc/Application.cpp
index a2475c6..d9d15da 100644
--- a/xbmc/Application.cpp
+++ b/xbmc/Application.cpp
@@ -2947,17 +2947,8 @@ void CApplication::Stop(int exitCode)
     if( m_bSystemScreenSaverEnable )
       g_Windowing.EnableSystemScreenSaver(true);
 
-    CLog::Log(LOGNOTICE, "Storing total System Uptime");
-    g_sysinfo.SetTotalUptime(g_sysinfo.GetTotalUptime() + (int)(CTimeUtils::GetFrameTime() / 60000));
-
-    // Update the settings information (volume, uptime etc. need saving)
-    if (CFile::Exists(CProfilesManager::GetInstance().GetSettingsFile()))
-    {
-      CLog::Log(LOGNOTICE, "Saving settings");
-      CSettings::GetInstance().Save();
-    }
-    else
-      CLog::Log(LOGNOTICE, "Not saving settings (settings.xml is not present)");
+    if (m_ExitCode != EXITCODE_QUIT)
+        CApplicationMessenger::Get().SaveStateStop();
 
     m_bStop = true;
     m_AppFocused = false;
@@ -3032,8 +3023,10 @@ void CApplication::Stop(int exitCode)
     // stop all remaining scripts; must be done after skin has been unloaded,
     // not before some windows still need it when deinitializing during skin
     // unloading
-    CScriptInvocationManager::GetInstance().Uninitialize();
-
+    
+if (m_ExitCode != EXITCODE_QUIT)
+        CScriptInvocationManager::Get().Uninitialize();
+ 
     g_Windowing.DestroyRenderSystem();
     g_Windowing.DestroyWindow();
     g_Windowing.DestroyWindowSystem();
@@ -3061,6 +3054,21 @@ void CApplication::Stop(int exitCode)
   Sleep(200);
 }
 
+void CApplication::SaveStateStop()
+{
+	CLog::Log(LOGNOTICE, "Storing total System Uptime");
+        g_sysinfo.SetTotalUptime(g_sysinfo.GetTotalUptime() + (int)(CTimeUtils::GetFrameTime() / 60000));
+
+    // Update the settings information (volume, uptime etc. need saving)
+    if (CFile::Exists(CProfilesManager::Get().GetSettingsFile()))
+    {
+      CLog::Log(LOGNOTICE, "Saving settings");
+      CSettings::Get().Save();
+    }
+    else
+      CLog::Log(LOGNOTICE, "Not saving settings (settings.xml is not present)");
+}
+
 bool CApplication::PlayMedia(const CFileItem& item, int iPlaylist)
 {
   //If item is a plugin, expand out now and run ourselves again
-- 
2.1.4

