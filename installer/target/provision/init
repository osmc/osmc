#!/bin/sh
#
# OSMC init script

# (c) 2014-2015 Sam Nazarko
# email@samnazarko.co.uk

loopforever()
{
    while true
    do
        sleep 1
    done
}

# Standard busybox init
/bin/mount -t proc proc /proc
/bin/mount -o remount,rw,noatime /
/bin/mount -t sysfs sysfs /sys
/bin/mount -t devtmpfs dev /dev
/bin/hostname -F /etc/hostname

# Configure eudev

. /etc/udev/udev.conf
printf '\000\000\000\000' > /proc/sys/kernel/hotplug
/sbin/udevd -d
udevadm trigger

sleep 3 # Wait for /dev population

partprobe # just to be safe

grep -q vero5 /proc/cmdline
if [ $? == 0 ]
then
	hdmimode=720p60hz

	for arg in $(cat /proc/cmdline)
	do
		 case ${arg} in
			hdmimode=*)
			   hdmimode=${arg#*=}
			;;
	esac
	done

	preferred=$(busybox grep \* /sys/class/amhdmitx/amhdmitx0/disp_cap | busybox sed 's/\*//g')
	if echo $hdmimode | busybox grep -q force
	then
    		hdmimode=$(echo $hdmimode | /bin/busybox sed 's/force//g')
    		echo "$hdmimode" > /sys/class/display/mode
	else
	if [ "$preferred" ] && [ "$hdmimode" != "$preferred" ]
	then
		if ! echo $preferred | busybox grep -q 2160p; then hdmimode="$preferred"; fi
  		echo "$hdmimode" > /sys/class/display/mode
	fi
fi

	# Configure framebuffer X and Y size

	case $hdmimode in
	  480*)            X=720  Y=480  ;;
	  576*)            X=720  Y=576  ;;
	  720p*)           X=1280 Y=720  ;;
	  *)               X=1920 Y=1080 ;;
	esac

	fbset -fb /dev/fb0 -g $X $Y 1920 2160 32
	fbset -fb /dev/fb1 -g 32 32 32 32 32

	echo 0 > /sys/class/graphics/fb0/free_scale
	echo 0 > /sys/class/graphics/fb1/free_scale
	echo 1 > /sys/class/video/disable_video

	# Enable framebuffer device

	echo 0 > /sys/class/graphics/fb0/blank

	# Prevent static artefacts
	echo 1 > /sys/class/graphics/fb1/blank
fi

# Make the TEE directory and mount the partition
mkdir /tee
mkfs.ext4 /dev/tee -F
mount /dev/tee /tee

# Mount the factory partition
modprobe vfat
sleep 2 # wait for module to settle
mkdir /factory
mount /dev/sda1 /factory

# Copy over the TEE files

cp /factory/optee/bin/apploader /bin/apploader
cp /factory/optee/lib/libteec.so.1.0 /lib/libteec.so.1.0
cp /factory/optee/bin/tee_osmc /bin/tee_osmc
mkdir -p /lib/teetz
cp /factory/optee/ta/23d6d081-0138-46a4-bba5-21b189d1a97e.ta.signed /lib/teetz/23d6d081-0138-46a4-bba5-21b189d1a97e.ta
chmod +x /bin/apploader
chmod +x /bin/tee_osmc
sync

# Initialise the supplicant
apploader &

# Wait for supplicant to settle
sleep 3

# Provision the device

tee_osmc -s /factory/optee/genuine_private_key.bin || loopforever

# Kill the supplicant
kill -9 $(pidof apploader)

# Create a backup of the keys, prepare OARS partition
mkdir -p /oars
mkfs.ext4 /dev/oars -F
mount /dev/oars /oars
tar -cvf /oars/tee_provision.tgz /tee/*

# Unmount partitions and write back
umount /factory
umount /oars
umount /tee
sync; sync

# Set the burning flag and reboot

fw_setenv osmc_burn_from_external true
echo b > /proc/sysrq-trigger
